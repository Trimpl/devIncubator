// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using devIncubator.Data;

namespace devIncubator.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("devIncubator.Models.Point", b =>
                {
                    b.Property<int>("PointId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChartId")
                        .HasColumnType("int");

                    b.Property<int>("PointX")
                        .HasColumnType("int");

                    b.Property<int>("PointY")
                        .HasColumnType("int");

                    b.HasKey("PointId");

                    b.ToTable("Point");
                });

            modelBuilder.Entity("devIncubator.Models.UserData", b =>
                {
                    b.Property<int>("UserDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RangeFrom")
                        .HasColumnType("int");

                    b.Property<int>("RangeTo")
                        .HasColumnType("int");

                    b.Property<int>("a")
                        .HasColumnType("int");

                    b.Property<int>("b")
                        .HasColumnType("int");

                    b.Property<int>("c")
                        .HasColumnType("int");

                    b.Property<float>("step")
                        .HasColumnType("real");

                    b.HasKey("UserDataId");

                    b.ToTable("UserData");
                });
#pragma warning restore 612, 618
        }
    }
}
